package com.yangnk.hfn.entity;

import java.util.ArrayList;
import java.util.List;

public class ImageExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    public ImageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andImagenameIsNull() {
            addCriterion("imageName is null");
            return (Criteria) this;
        }

        public Criteria andImagenameIsNotNull() {
            addCriterion("imageName is not null");
            return (Criteria) this;
        }

        public Criteria andImagenameEqualTo(String value) {
            addCriterion("imageName =", value, "imagename");
            return (Criteria) this;
        }

        public Criteria andImagenameNotEqualTo(String value) {
            addCriterion("imageName <>", value, "imagename");
            return (Criteria) this;
        }

        public Criteria andImagenameGreaterThan(String value) {
            addCriterion("imageName >", value, "imagename");
            return (Criteria) this;
        }

        public Criteria andImagenameGreaterThanOrEqualTo(String value) {
            addCriterion("imageName >=", value, "imagename");
            return (Criteria) this;
        }

        public Criteria andImagenameLessThan(String value) {
            addCriterion("imageName <", value, "imagename");
            return (Criteria) this;
        }

        public Criteria andImagenameLessThanOrEqualTo(String value) {
            addCriterion("imageName <=", value, "imagename");
            return (Criteria) this;
        }

        public Criteria andImagenameLike(String value) {
            addCriterion("imageName like", value, "imagename");
            return (Criteria) this;
        }

        public Criteria andImagenameNotLike(String value) {
            addCriterion("imageName not like", value, "imagename");
            return (Criteria) this;
        }

        public Criteria andImagenameIn(List<String> values) {
            addCriterion("imageName in", values, "imagename");
            return (Criteria) this;
        }

        public Criteria andImagenameNotIn(List<String> values) {
            addCriterion("imageName not in", values, "imagename");
            return (Criteria) this;
        }

        public Criteria andImagenameBetween(String value1, String value2) {
            addCriterion("imageName between", value1, value2, "imagename");
            return (Criteria) this;
        }

        public Criteria andImagenameNotBetween(String value1, String value2) {
            addCriterion("imageName not between", value1, value2, "imagename");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameIsNull() {
            addCriterion("imageAliasName is null");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameIsNotNull() {
            addCriterion("imageAliasName is not null");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameEqualTo(String value) {
            addCriterion("imageAliasName =", value, "imagealiasname");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameNotEqualTo(String value) {
            addCriterion("imageAliasName <>", value, "imagealiasname");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameGreaterThan(String value) {
            addCriterion("imageAliasName >", value, "imagealiasname");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameGreaterThanOrEqualTo(String value) {
            addCriterion("imageAliasName >=", value, "imagealiasname");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameLessThan(String value) {
            addCriterion("imageAliasName <", value, "imagealiasname");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameLessThanOrEqualTo(String value) {
            addCriterion("imageAliasName <=", value, "imagealiasname");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameLike(String value) {
            addCriterion("imageAliasName like", value, "imagealiasname");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameNotLike(String value) {
            addCriterion("imageAliasName not like", value, "imagealiasname");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameIn(List<String> values) {
            addCriterion("imageAliasName in", values, "imagealiasname");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameNotIn(List<String> values) {
            addCriterion("imageAliasName not in", values, "imagealiasname");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameBetween(String value1, String value2) {
            addCriterion("imageAliasName between", value1, value2, "imagealiasname");
            return (Criteria) this;
        }

        public Criteria andImagealiasnameNotBetween(String value1, String value2) {
            addCriterion("imageAliasName not between", value1, value2, "imagealiasname");
            return (Criteria) this;
        }

        public Criteria andImageinfoIsNull() {
            addCriterion("imageInfo is null");
            return (Criteria) this;
        }

        public Criteria andImageinfoIsNotNull() {
            addCriterion("imageInfo is not null");
            return (Criteria) this;
        }

        public Criteria andImageinfoEqualTo(String value) {
            addCriterion("imageInfo =", value, "imageinfo");
            return (Criteria) this;
        }

        public Criteria andImageinfoNotEqualTo(String value) {
            addCriterion("imageInfo <>", value, "imageinfo");
            return (Criteria) this;
        }

        public Criteria andImageinfoGreaterThan(String value) {
            addCriterion("imageInfo >", value, "imageinfo");
            return (Criteria) this;
        }

        public Criteria andImageinfoGreaterThanOrEqualTo(String value) {
            addCriterion("imageInfo >=", value, "imageinfo");
            return (Criteria) this;
        }

        public Criteria andImageinfoLessThan(String value) {
            addCriterion("imageInfo <", value, "imageinfo");
            return (Criteria) this;
        }

        public Criteria andImageinfoLessThanOrEqualTo(String value) {
            addCriterion("imageInfo <=", value, "imageinfo");
            return (Criteria) this;
        }

        public Criteria andImageinfoLike(String value) {
            addCriterion("imageInfo like", value, "imageinfo");
            return (Criteria) this;
        }

        public Criteria andImageinfoNotLike(String value) {
            addCriterion("imageInfo not like", value, "imageinfo");
            return (Criteria) this;
        }

        public Criteria andImageinfoIn(List<String> values) {
            addCriterion("imageInfo in", values, "imageinfo");
            return (Criteria) this;
        }

        public Criteria andImageinfoNotIn(List<String> values) {
            addCriterion("imageInfo not in", values, "imageinfo");
            return (Criteria) this;
        }

        public Criteria andImageinfoBetween(String value1, String value2) {
            addCriterion("imageInfo between", value1, value2, "imageinfo");
            return (Criteria) this;
        }

        public Criteria andImageinfoNotBetween(String value1, String value2) {
            addCriterion("imageInfo not between", value1, value2, "imageinfo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table image
     *
     * @mbggenerated do_not_delete_during_merge Sun Apr 30 16:26:24 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table image
     *
     * @mbggenerated Sun Apr 30 16:26:24 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}